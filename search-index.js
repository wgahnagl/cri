var searchIndex = JSON.parse('{\
"cri":{"doc":"This is the main library interface for this project","i":[[0,"kubernetes","cri","Everything Kubernetes related, like the actual GRPC server…",null,null],[0,"server","cri::kubernetes","Container Runtime Interface server implementation",null,null],[3,"Config","cri::kubernetes::server","Config is the main configuration structure for the server.",null,null],[3,"Server","","Server is the main instance to run the Container Runtime…",null,null],[4,"LogScope","","Defines the scope of the log level",null,null],[13,"Lib","","Logging will only happen on a library level.",0,null],[13,"Global","","All dependent libraries will log too.",0,null],[11,"log_level","","The logging level of the application.",1,[[],["levelfilter",4]]],[11,"log_scope","","The logging scope of the application. If set to `global`,…",1,[[],["logscope",4]]],[11,"sock_path","","The path to the unix socket for the server.",1,[[],["pathbuf",3]]],[11,"storage_path","","The path to the persistent storage for the server.",1,[[],["pathbuf",3]]],[11,"cni_default_network","","The default CNI network name to choose.",1,[[],["option",4]]],[11,"cni_config_paths","","The paths to the CNI configurations.",1,[[],["vec",3]]],[11,"cni_plugin_paths","","The paths to the CNI plugin binaries, separated by the OS…",1,[[],["string",3]]],[11,"new","","Create a new server instance",2,[[["config",3]]]],[11,"start","","Start a new server with its default values",2,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"into_request","","",1,[[],["request",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"into_request","","",2,[[],["request",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"__clone_box","","",0,[[["private",3]]]],[11,"into_request","","",0,[[],["request",3]]],[11,"vzip","","",0,[[]]],[11,"as_ref","","",0,[[]]],[11,"clone","","",0,[[],["logscope",4]]],[11,"default","","",1,[[]]],[11,"eq","","",0,[[["logscope",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"from_str","","",0,[[],[["logscope",4],["result",4]]]],[11,"serialize","","",1,[[],["result",4]]],[11,"serialize","","",0,[[],["result",4]]],[11,"deserialize","","",1,[[],["result",4]]],[11,"deserialize","","",0,[[],["result",4]]],[11,"into_app","","",1,[[],["app",3]]],[11,"augment_clap","","",1,[[["app",3]],["app",3]]],[11,"from_arg_matches","","",1,[[["argmatches",3]]]]],"p":[[4,"LogScope"],[3,"Config"],[3,"Server"]]},\
"criserver":{"doc":"","i":[[5,"main","criserver","",null,[[],["result",6]]]],"p":[]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);